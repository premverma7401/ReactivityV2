{
  "qhandler": {
    "prefix": "qhand",
    "body": [
      "using System.Collections.Generic;",
      "using MediatR;",
      "using System.Threading.Tasks;",
      "using System.Threading;",
      "using Domain;",
      "using Persistence;",
      "using Microsoft.EntityFrameworkCore;",
      "",
      "        public class Query : IRequest<${1:example}>",
      "        {",
      "",
      "        }",
      "        public class Handler : IRequestHandler<Query, ${1:example}>",
      "        {",
      "            private readonly DataContext _context;",
      "            public Handler(DataContext context)",
      "            {",
      "                _context = context;",
      "",
      "            }",
      "            public async Task<${1:example}> Handle(Query request, CancellationToken cancellationToken)",
      "            {",
      "                var ${1:example}= await _context.${1:example}.ToListAsync();",
      "                return ${1:example};",
      "            }",
      "        }",
      ""
    ],
    "description": "qhandler"
  }
}
